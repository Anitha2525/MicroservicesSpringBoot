spring.application.name=inventory-service
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/inventory-service
spring.datasource.username=root
spring.datasource.password=password
spring.jpa.hibernate.ddl-auto=update

# SERVICE DISCOVERY PATTERN
#spring boot will pick random port and will run the application
#server.port=8082
server.port=0
#multiple instances of inverntory service - dont hard code the port value

eureka.instance.hostname=localhost
spring.cloud.discovery.enabled=true

# when multiple-instances are running - we need to ENABLE Client-Side LOADBALANCING
#WHEN CONSTRUCTING WEBCLIENT BEAN
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
# as these are eureka clients- we have to provide where we can find the server

spring.config.import=optional:configserver:
#spring.cloud.config.discovery.enabled=true
#eureka.client.webclient.enabled=true
#eureka.instance.hostname=localhost

#CLIENT SIDE SERVICE DISCOVERY (SPRING BOOT, SPRING CLOUD USES)
#CLIENT -- ASKS --- DISCOVERY SERVER --- SERVICE1, SERVICE2, SERVICE3
#SPRING CLOUD USES EUREKA. NETFLIX OSS CREATED EUREKA, RIBBON, HYSTERIX, ZUUL
#SPRING BOOT/CLOUD ABSTRACTION LAYER
#DISCOVERY SERVER IS EUREKA SERVER. INDIVIDUAL SERVICES ARE EUREKA CLIENTS.
#SERVER SIDE SERVICE DISCOVERY
# CLIENT --ASKS DICOVERY SERVER TO PASS ON MESSAGE TO SERVICE1, SERVICE2

#MYSQL SERVER 8.4 SETUP WIZARD FROM ORACLE
#MYSQL CONFIGURATOR DEVELOPMENT COMPUTER TCP/IP 3306 root/password